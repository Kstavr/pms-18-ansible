---
- name: Ensure Docker is installed and running
  hosts: targets
  become: yes
  become_user: root
  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Add user to docker group
      user:
        name: vm2
        groups: docker
        append: yes
    
    - name: Add telegraf user to docker group
      user:
        name: telegraf
        groups: docker
        append: yes
      ignore_errors: yes # In case the telegraf user doesn't exist  
    
    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: true
    - name: Gather system facts
      setup:
       gather_subset:
         - 'hardware'

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"       
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Verify Docker Compose installation
      command: docker-compose --version



- name: Setup OwnCloud, Grafana, InfluxDB, Telegraf
  hosts: targets
  become: yes
  become_user: root
  tasks:
    - name: Create Docker Compose directory for OwnCloud
      file:
        path: /home/vm2/owncloud
        state: directory

    - name: Copy Docker Compose file for OwnCloud
      copy:
        dest: /home/vm2/owncloud/docker-compose.yml
        content: |
          version: '3.8'
          services:
            owncloud:
              image: owncloud/server
              ports:
                - "8080:8080"
              volumes:
                - owncloud_data:/mnt/data
              restart: always
              environment:
                - OWNCLOUD_DOMAIN=192.168.1.252:8080
                - OWNCLOUD_TRUSTED_DOMAINS=localhost,192.168.1.252
                - OWNCLOUD_OVERWRITE_CLI_URL=http://192.168.1.252:8080/
          volumes:
            owncloud_data:
      notify: Restart OwnCloud

    - name: Create Docker Compose directory for Grafana
      file:
        path: /home/vm2/grafana
        state: directory

    - name: Copy Docker Compose file for Grafana
      copy:
        dest: /home/vm2/grafana/docker-compose.yml
        content: |
          version: '3.8'
          services:
            grafana:
              image: grafana/grafana
              ports:
                - "3000:3000"
              restart: always
      notify: Restart Grafana

    - name: Create Docker Compose directory for InfluxDB and Telegraf
      file:
        path: /home/vm2/influxdb_telegraf
        state: directory

    - name: Copy Docker Compose file for InfluxDB and Telegraf
      copy:
        dest: /home/vm2/influxdb_telegraf/docker-compose.yml
        content: |
          version: '3.8'
          services:
            influxdb:
              image: influxdb:2.7
              ports:
                - "8086:8086"
              volumes:
                - influxdb_data:/var/lib/influxdb
              environment:
                - DOCKER_INFLUXDB_INIT_MODE=setup
                - DOCKER_INFLUXDB_INIT_USERNAME=admin
                - DOCKER_INFLUXDB_INIT_PASSWORD=adminpass
                - DOCKER_INFLUXDB_INIT_BUCKET=telegraf
                - DOCKER_INFLUXDB_INIT_ORG=myorg
                - DOCKER_INFLUXDB_INIT_RETENTION=0
                - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=mytoken
                - INFLUXDB_DB=telegraf
              restart: always
            telegraf:
              image: telegraf
              volumes:
                - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
                - /var/run/docker.sock:/var/run/docker.sock:ro  
              restart: always
              depends_on:
                - influxdb
          volumes:
            influxdb_data:
            telegraf_data:  
      notify: Restart InfluxDB_Telegraf

    - name: Copy Telegraf configuration file
      copy:
        dest: /home/vm2/influxdb_telegraf/telegraf.conf
        content: |
          [global_tags]
          [agent]
            interval = "10s"
            round_interval = true
            metric_batch_size = 1000
            metric_buffer_limit = 10000
            collection_jitter = "0s"
            flush_interval = "10s"
            flush_jitter = "0s"
            precision = ""
            hostname = ""
            omit_hostname = false
          [[outputs.influxdb_v2]]
            urls = ["http://192.168.1.252:8086"]
            token = "mytoken"
            organization = "myorg"
            bucket = "telegraf"
          [[inputs.docker]]
            endpoint = "unix:///var/run/docker.sock"
            gather_services = false
            container_names = []
            source_tag = false
            container_name_include = []
            container_name_exclude = []
            container_state_include = []
            container_state_exclude = []
            timeout = "5s"
            perdevice_include = ["cpu"]
            docker_label_include = []
            docker_label_exclude = []
      notify: Restart InfluxDB_Telegraf
    
    - name: Initialize Telegraf database in InfluxDB
      command: docker exec -i nfluxdb_telegraf_influxdb_1 influx -execute 'CREATE DATABASE telegraf'
      args:
        chdir: /home/vm2/influxdb
      when: telegraf_initialized is undefined
      register: telegraf_initialized    

    - name: Debug notifications
      debug:
        msg: "Notifications have been registered."

    - name: Set permissions for OwnCloud
      file:
        path: /home/vm2/owncloud/docker-compose.yml
        owner: vm2
        group: vm2
        mode: '0644'

    - name: Set permissions for Grafana
      file:
        path: /home/vm2/grafana/docker-compose.yml
        owner: vm2
        group: vm2
        mode: '0644'

    - name: Set permissions for InfluxDB and Telegraf
      file:
        path: /home/vm2/influxdb_telegraf/docker-compose.yml
        owner: vm2
        group: vm2
        mode: '0644'

  handlers:
    - name: Restart OwnCloud
      command: docker-compose down && docker-compose up -d
      args:
        chdir: /home/vm2/owncloud

    - name: Restart Grafana
      command: docker-compose down && docker-compose up -d
      args:
        chdir: /home/vm2/grafana

    - name: Restart InfluxDB_Telegraf
      command: docker-compose down && docker-compose up -d
      args:
        chdir: /home/vm2/influxdb_telegraf

